{"version":3,"file":"static/js/602.052d3bd7.chunk.js","mappings":"8LA+DA,EA7DoB,SAAC,GAAwB,IAAtBA,EAAqB,EAArBA,eAEbC,EAASC,OAAOC,QAAQH,GAExBI,EAAsBH,EAAOI,QAEnCC,QAAQC,IAAIH,GAEZH,EAAOO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MAE/B,IAMME,EAAY,CACdC,UAAW,SACXC,WAAY,IACZC,SAAU,GACVC,WAAY,IACZC,cAAe,IACfC,MAAO,UACPC,aAAc,GAGlB,OACI,gBAAKC,MAjBuB,CAC5BC,YAAa,OACbC,WAAY,OACZC,UAAW,IAcX,UACI,yBACW,OAANrB,QAAM,IAANA,OAAA,EAAAA,EAAQsB,QAAS,EACdtB,EAAOuB,KAAI,SAAAC,GAAE,OACT,gBAAmBN,MAAO,CAAEO,cAAe,IAA3C,WACI,iBACIP,MAAO,CACHQ,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAJxB,WAOI,iBAAMV,MAAOR,EAAb,SAAyBc,EAAG,MAC5B,kBAAMN,MAAOR,EAAb,UAAyBc,EAAG,GAA5B,6BAEJ,gBACIN,MAAO,CACHW,MAAQL,EAAG,GAAKxB,EAAO,GAAG,GAAM,IAChC8B,OAAQ,OACRC,WAAYP,EAAG,GAAK,IAAM,EAAI,UAAY,UAC1CQ,qBAAsB,GACtBC,wBAAyB,SAjB5BC,EAAAA,EAAAA,WAuBb,eAAIhB,MAAO,CAAEiB,UAAW,UAAxB,yDC+CpB,EArGoB,SAAC,GAAwB,IAAtBpC,EAAqB,EAArBA,eAEbC,EAASC,OAAOC,QAAQH,GAExBI,EAAsBH,EAAOI,QACnCC,QAAQC,IAAIH,GAEZH,EAAOO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MAE/B,IAaM4B,EAAkB,CACpBC,UAAW,oBACXR,MAAO,IACPC,OAAQ,IAWNQ,EAAiB,CACnBZ,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBW,WAAY,SACZpB,YAAa,GACbqB,OAAQ,GAGZ,OACI,iBAAKtB,MArCuB,CAC5BuB,SAAU,WACVV,WAAY,UAEZD,OAAQ,IACRX,YAAa,OACbC,WAAY,OACZC,UAAW,GACXqB,aAAc,GACdC,WAAY,GACZlB,cAAe,GACfmB,UAAW,mCA0BX,WACI,gBAAI1B,MAAO,CAAEuB,SAAU,WAAYD,OAAQ,EAAGK,IAAK,GAAIC,MAAO,IAA9D,WACI,yBACI,gBAAK5B,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,UAGpB,eAAIlB,MAhDW,CACnBQ,QAAS,OACTC,cAAe,MACfY,WAAY,MACZX,eAAgB,SAChBY,OAAQ,GA2CJ,UACW,OAANxC,QAAM,IAANA,OAAA,EAAAA,EAAQsB,QAAS,EACdtB,EAAOuB,KAAI,SAAAC,GAAE,OACT,gBAAIN,MAAOoB,EAAX,WACI,4BAAOd,EAAG,GAAV,yBACA,gBACIN,MAAO,CACHY,OAASN,EAAG,GAAKxB,EAAO,GAAG,GAAM,IACjC6B,MAAO,OACPE,WAAYP,EAAG,GAAK,IAAM,EAAI,UAAY,UAC1CuB,oBAAqB,GACrBf,qBAAsB,OAG9B,0BAAOR,EAAG,QAXkBU,EAAAA,EAAAA,WAepC,yE,UC/FpB,EAA8B,kCAA9B,EAA8E,kCAA9E,EAAkI,sCCmGlI,EAhGqB,SAAC,GAAwB,IAAD,EAArBnC,EAAqB,EAArBA,eAEhBC,EAASC,OAAOC,QAAQH,GAG5BC,EAAOI,QAGPJ,EAAOO,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,OAE/BwC,EAAAA,EAAAA,YAAU,WAENhD,EAAS,KACV,IAEH,IAaMoC,EAAkB,CACpBC,UAAW,oBACXR,MAAO,IACPC,OAAQ,IAWZ,OACI,iBAAKZ,MA5BuB,CAC5BuB,SAAU,WACVV,WAAY,UAEZD,OAAQ,IACRX,YAAa,OACbC,WAAY,OACZC,UAAW,GACXqB,aAAc,GACdC,WAAY,GACZlB,cAAe,GACfmB,UAAW,mCAiBX,WACI,gBAAI1B,MAAO,CAAEuB,SAAU,WAAYD,OAAQ,EAAGK,IAAK,GAAIC,MAAO,KAA9D,WACI,yBACI,gBAAK5B,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,OAEhB,yBACI,gBAAKlB,MAAOkB,UAGpB,eAAIlB,MAvCW,CACnBQ,QAAS,OACTC,cAAe,MACfY,WAAY,MACZX,eAAgB,SAChBY,OAAQ,GAkCJ,UACW,QAAN,EAAAxC,SAAA,eAAQsB,QAAS,EACdtB,EAAOuB,KAAI,SAACC,EAAIyB,GAAL,OACP,gBAAIC,UAAWC,EAAf,WACI,kBAAMD,UAAWC,EAAjB,UAAqC3B,EAAG,GAAxC,yBACA,gBACI0B,UAAWC,EACXjC,MAAO,CACHY,OAASN,EAAG,GAAKxB,EAAO,GAAG,GAAM,IACjCoD,gBAAiBH,EAAQ,IAAM,EAAI,UAAY,cAGvD,iBAAMC,UAAWC,EAAjB,SAAqC3B,EAAG,QATTU,EAAAA,EAAAA,WAavC,yE,UC5FpB,EAA4B,2BAA5B,EAAsE,8B,kDCAtE,GAAgB,UAAY,iCAAiC,qBAAuB,4CAA4C,WAAa,kCAAkC,iBAAmB,wCAAwC,OAAS,8BAA8B,cAAgB,qCAAqC,uBAAyB,8CAA8C,mBAAqB,0CAA0C,cAAgB,qCAAqC,iBAAmB,yC,SCKhhBmB,GAAiB,EACjBC,GAA2B,EA8G/B,EA5GsB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,mBACnCC,GAAYC,EAAAA,EAAAA,KACd,SAAAC,GAAK,2BAAIA,EAAMC,QAAQC,qBAAqBC,eAAvC,iBAAI,EAA4CC,mBAAhD,iBAAI,EAA0DC,EAAAA,WAA9D,aAAI,EAA4EC,SAEnFC,GAAsBR,EAAAA,EAAAA,KACxB,SAAAC,GAAK,2BACDA,EAAMC,QAAQC,qBAAqBC,eADlC,iBACD,EAA4CC,mBAD3C,iBACD,EAA0DI,EAAAA,WADzD,aACD,EACMF,SAGRG,GAAeV,EAAAA,EAAAA,KACjB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,qBAAqBC,QAAQO,eAYlDC,EAAU,SAAAC,GAGZ,OAFAf,EAAmBe,GALnBlB,GAAiB,EACjBC,GAA2B,EAMnBiB,GACJ,KAAKP,EAAAA,GACDX,GAAiB,EACjB,MACJ,KAAKc,EAAAA,GACDb,GAA2B,EAKnCjD,QAAQC,IAAI,6BAA8BgD,GAC1CjD,QAAQC,IAAI,mBAAoB+C,IAoBpC,OACI,iBAAKH,UAAWC,EAAAA,UAAhB,WACI,iBAAKD,UAAWC,EAAAA,qBAAhB,WACI,mBAAQmB,QAASf,EAAoBL,UAAWC,EAAAA,WAAhD,UACI,gBAAKD,UAAWC,EAAAA,iBAAoBtB,MAAM,IAAIC,OAAO,KAArD,UACI,gBAAK0C,KAAI,UAAKC,EAAAA,EAAL,+BAGjB,eAAIvB,UAAWC,EAAAA,cAAf,qBACA,mBAAQmB,QAASf,EAAoBL,UAAWC,EAAAA,WAAhD,UACI,gBAAKD,UAAWC,EAAAA,iBAAoBtB,MAAM,IAAIC,OAAO,KAArD,UACI,gBAAK0C,KAAI,UAAKC,EAAAA,EAAL,kCAIH,IAAjBL,IAAsB,eAAIlB,UAAWC,EAAAA,cAAf,uCACvB,gBAAID,UAAWC,EAAAA,uBAAf,UACKM,IACG,gBAAIa,QAAS,kBAAMA,EAAQN,EAAAA,KAAkBd,UAAWC,EAAAA,mBAAxD,WACI,0BAAOM,KACP,gBACIP,UAAWG,EAAiBF,EAAAA,OAAWA,EAAAA,iBACvCtB,MAAM,KACNC,OAAO,KAHX,UAKI,gBAAK0C,KAAI,UAAKC,EAAAA,EAAL,0BAEb,iBAAMvB,UAAWC,EAAAA,iBAAjB,6BAGPe,IACG,gBACII,QAAS,kBAAMA,EAAQH,EAAAA,KACvBjB,UAAWC,EAAAA,mBAFf,WAII,0BAAOe,KACP,gBACIhB,UAAWI,EAA2BH,EAAAA,OAAWA,EAAAA,iBACjDtB,MAAM,KACNC,OAAO,KAHX,UAKI,gBAAK0C,KAAI,UAAKC,EAAAA,EAAL,0BAEb,iBAAMvB,UAAWC,EAAAA,iBAAjB,yECuCxB,EArIgB,WACZ,IAAMuB,GAAmBhB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMgB,KAAKD,oBACzD,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAgDN,EAAAA,EAAAA,UAAS,IAAzD,eAAOO,EAAP,KAAyBC,EAAzB,KACA,GAA8CR,EAAAA,EAAAA,UAAS,IAAvD,eAAOS,EAAP,KAAwBC,EAAxB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAA4B/B,EAAAA,EAAAA,KAC9B,SAAAC,GAAK,uCAAIA,EAAMC,QAAQC,4BAAlB,iBAAI,EAAoCC,eAAxC,iBAAI,EAA6CC,mBAAjD,aAAI,EAA2DsB,UAA/D,QAAmF,MAEtFK,GAA6BhC,EAAAA,EAAAA,KAC/B,SAAAC,GAAK,uCACDA,EAAMC,QAAQC,4BADb,iBACD,EAAoC8B,gBADnC,iBACD,EAA8CC,oBAD7C,aACD,EAA6DT,UAD5D,QACiF,MAGpFU,GAAenC,EAAAA,EAAAA,KACjB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,qBAAqB8B,SAASG,gBAIrDC,EAASlB,EAETkB,EADAlB,EAAO,GACD,WAAOA,GAEJA,EAEb,IAAMmB,GAAatC,EAAAA,EAAAA,IAAYuC,EAAAA,EAAAA,gBAE/BjD,EAAAA,EAAAA,YAAU,WACD0B,IACIsB,EAEET,EAASW,EAAAA,GAAAA,wBAAkCH,IAD7C,QAGV,CAACR,EAAUM,EAAcE,EAAQrB,EAAkBsB,IAEtD,IAAQnE,GAAUsE,EAAAA,EAAAA,KAAVtE,MAIFuE,GAAc1C,EAAAA,EAAAA,KAChB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,qBAAqBC,QAAQO,eAiBlDd,EAAqB,WAEnByB,GADAD,GAMAG,GADAD,IAeR,OAAKe,GAKD,iBAAK9C,UAAWC,EAAhB,WACI,iBAAKD,UAAWC,EAAhB,WACI,SAAC,KAAD,KACA,SAAC,KAAD,KACA,SAAC,KAAD,CACI0B,KAAMA,EACNwB,oBA9CY,WACxB,GAAIxB,GAAQ,GACR,OAAOC,EAAQ,GAEnBA,EAAQD,EAAO,IA2CHyB,oBAxCY,WACxB,GAAIzB,GAAQ,EACR,OAAOC,EAAQ,IAEnBA,EAAQD,EAAO,UAuCX,SAAC,KAAD,CAAcgB,aAAcA,EAAcO,YAAaA,IACtDnB,IACG,SAAC,KAAD,CACI1B,mBAAoBA,EACpBC,mBA3BW,SAAA+C,GACvBnB,EAAoBmB,MA6BfxB,IACG,SAAC,EAAD,CACIxB,mBAAoBA,EACpBC,mBA7BU,SAAA+C,GACtBjB,EAAmBiB,OA+Bf,2BACKtB,GAAauB,QAAQ3E,EAAQ,OAC1B,SAAC,EAAD,CAAa9B,eAAgB2F,IAEhCT,GAAauB,QAAQ3E,GAAS,KAAOA,GAAS,QAC3C,SAAC,EAAD,CAAa9B,eAAgB2F,IAEhCT,GAAauB,QAAQ3E,GAAS,QAC3B,SAAC,EAAD,CAAc9B,eAAgB2F,IAGjCX,GAAYyB,QAAQ3E,EAAQ,OACzB,SAAC,EAAD,CAAa9B,eAAgB0F,IAEhCV,GAAYyB,QAAQ3E,GAAS,KAAOA,GAAS,QAC1C,SAAC,EAAD,CAAa9B,eAAgB0F,IAEhCV,GAAYyB,QAAQ3E,GAAS,QAC1B,SAAC,EAAD,CAAc9B,eAAgB0F,WA7CnC,SAAC,KAAD,CAAUgB,GAAG","sources":["components/Charts/MobileChart.jsx","components/Charts/TabletChart.jsx","webpack://kapusta/./src/components/Charts/DesktopChart.module.css?ec2f","components/Charts/DesktopChart.jsx","webpack://kapusta/./src/pages/Reports/Reports.module.css?8987","webpack://kapusta/./src/components/ReportsIncome/ReportsIncome.module.css?820f","components/ReportsIncome/ReportsIncome.jsx","pages/Reports/Reports.jsx"],"sourcesContent":["import { nanoid } from '@reduxjs/toolkit';\r\n\r\nconst MobileChart = ({ objectForChart }) => {\r\n    // Преобразование обькта с обьектами в массив массивов\r\n    const result = Object.entries(objectForChart);\r\n    // Удаление елемента тотал, т.к. он не нужен в графиках\r\n    const totalElementOfArray = result.shift();\r\n\r\n    console.log(totalElementOfArray);\r\n    // сортировка по убыванию\r\n    result.sort((a, b) => b[1] - a[1]);\r\n\r\n    const chartListContainerStyle = {\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginTop: 29,\r\n    };\r\n\r\n    const textStyle = {\r\n        fontStyle: 'normal',\r\n        fontWeight: 400,\r\n        fontSize: 10,\r\n        lineHeight: 1.1,\r\n        letterSpacing: 0.02,\r\n        color: '#52555F',\r\n        marginBottom: 2,\r\n    };\r\n\r\n    return (\r\n        <div style={chartListContainerStyle}>\r\n            <ul>\r\n                {result?.length > 0 ? (\r\n                    result.map(el => (\r\n                        <li key={nanoid()} style={{ paddingBottom: 20 }}>\r\n                            <div\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                }}\r\n                            >\r\n                                <span style={textStyle}>{el[0]}</span>\r\n                                <span style={textStyle}>{el[1]} грн</span>\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    width: (el[1] / result[0][1]) * 250,\r\n                                    height: '15px',\r\n                                    background: el[1] % 3 === 1 ? '#FF751D' : '#FED9BF',\r\n                                    borderTopRightRadius: 10,\r\n                                    borderBottomRightRadius: 10,\r\n                                }}\r\n                            ></div>\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li style={{ textAlign: 'center' }}>Please choose category to create chart</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileChart;\r\n","import { nanoid } from '@reduxjs/toolkit';\r\n\r\nconst TabletChart = ({ objectForChart }) => {\r\n    // Преобразование обькта с обьектами в массив массивов\r\n    const result = Object.entries(objectForChart);\r\n    // Удаление елемента тотал, т.к. он не нужен в графиках\r\n    const totalElementOfArray = result.shift();\r\n    console.log(totalElementOfArray);\r\n    // сортировка по убыванию\r\n    result.sort((a, b) => b[1] - a[1]);\r\n\r\n    const chartListContainerStyle = {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n        // width:704,\r\n        height: 422,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginTop: 32,\r\n        borderRadius: 30,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\r\n    };\r\n    const chartDecorStyle = {\r\n        borderTop: '2px solid #F5F6FB',\r\n        width: 570,\r\n        height: 40,\r\n    };\r\n\r\n    const chartListStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'end',\r\n        justifyContent: 'center',\r\n        zIndex: 2,\r\n    };\r\n\r\n    const ChartItemStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginRight: 10,\r\n        zIndex: 2,\r\n    };\r\n\r\n    return (\r\n        <div style={chartListContainerStyle}>\r\n            <ul style={{ position: 'absolute', zIndex: 1, top: 38, right: 39 }}>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n            </ul>\r\n            <ul style={chartListStyle}>\r\n                {result?.length > 0 ? (\r\n                    result.map(el => (\r\n                        <li style={ChartItemStyle} key={nanoid()}>\r\n                            <span>{el[1]}грн</span>\r\n                            <div\r\n                                style={{\r\n                                    height: (el[1] / result[0][1]) * 328,\r\n                                    width: '38px',\r\n                                    background: el[1] % 3 === 1 ? '#FF751D' : '#FED9BF',\r\n                                    borderTopLeftRadius: 10,\r\n                                    borderTopRightRadius: 10,\r\n                                }}\r\n                            ></div>\r\n                            <span>{el[0]}</span>\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li>Please choose category to create chart</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabletChart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Chart__item\":\"DesktopChart_Chart__item__nWxpW\",\"charts__bar\":\"DesktopChart_charts__bar__Z27+7\",\"chartItem__text\":\"DesktopChart_chartItem__text__+jhB2\"};","import { useEffect } from 'react';\r\nimport s from './DesktopChart.module.css';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nconst DesktopChart = ({ objectForChart }) => {\r\n    // Преобразование обькта с обьектами в массив массивов\r\n    let result = Object.entries(objectForChart);\r\n\r\n    // Удаление елемента тотал, т.к. он не нужен в графиках\r\n    result.shift();\r\n\r\n    // сортировка по убыванию\r\n    result.sort((a, b) => b[1] - a[1]);\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        result = [];\r\n    }, []);\r\n\r\n    const chartListContainerStyle = {\r\n        position: 'relative',\r\n        background: '#FFFFFF',\r\n\r\n        height: 422,\r\n        marginRight: 'auto',\r\n        marginLeft: 'auto',\r\n        marginTop: 40,\r\n        borderRadius: 30,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)',\r\n    };\r\n    const chartDecorStyle = {\r\n        borderTop: '2px solid #F5F6FB',\r\n        width: 758,\r\n        height: 40,\r\n    };\r\n\r\n    const chartListStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'end',\r\n        justifyContent: 'center',\r\n        zIndex: 2,\r\n    };\r\n\r\n    return (\r\n        <div style={chartListContainerStyle}>\r\n            <ul style={{ position: 'absolute', zIndex: 1, top: 40, right: 150 }}>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={chartDecorStyle}></div>\r\n                </li>\r\n            </ul>\r\n            <ul style={chartListStyle}>\r\n                {result?.length > 0 ? (\r\n                    result.map((el, index) => (\r\n                        <li className={s.Chart__item} key={nanoid()}>\r\n                            <span className={s.chartItem__text}>{el[1]}грн</span>\r\n                            <div\r\n                                className={s.charts__bar}\r\n                                style={{\r\n                                    height: (el[1] / result[0][1]) * 328,\r\n                                    backgroundColor: index % 3 === 0 ? '#FF751D' : '#FFDAC0',\r\n                                }}\r\n                            ></div>\r\n                            <span className={s.chartItem__text}>{el[0]}</span>\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <li>Please choose category to create chart</li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DesktopChart;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reports_container__87ki+\",\"reports__nav\":\"Reports_reports__nav__vgr3C\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ReportsIncome_container__62MVo\",\"headGroup__container\":\"ReportsIncome_headGroup__container__BI6Qo\",\"flipbutton\":\"ReportsIncome_flipbutton__CdmdH\",\"categories__icon\":\"ReportsIncome_categories__icon__PbuVy\",\"active\":\"ReportsIncome_active__VoXJL\",\"period__title\":\"ReportsIncome_period__title__emnk9\",\"groupContent_container\":\"ReportsIncome_groupContent_container__Xc9t9\",\"content__container\":\"ReportsIncome_content__container__GGYWy\",\"Notify__title\":\"ReportsIncome_Notify__title__6Z0Va\",\"categories__text\":\"ReportsIncome_categories__text__bJvHP\"};","import { useSelector } from 'react-redux';\r\nimport svg from '../../images/sprite.svg';\r\nimport s from './ReportsIncome.module.css';\r\nimport { SALARY_CATEGORY, ADDITIONAL_INCOME_CATEGORY } from '../Constants/Constants';\r\n// import { useState } from 'react';\r\n\r\nlet isActiveSalary = false;\r\nlet isActiveAdditionalIncome = false;\r\n\r\nconst ReportsIncome = ({ handleChangeRender, chooseProductChart }) => {\r\n    const getSalary = useSelector(\r\n        state => state.finance.transactionsByPeriod.incomes?.incomesData?.[SALARY_CATEGORY]?.total\r\n    );\r\n    const getAdditionalIncome = useSelector(\r\n        state =>\r\n            state.finance.transactionsByPeriod.incomes?.incomesData?.[ADDITIONAL_INCOME_CATEGORY]\r\n                ?.total\r\n    );\r\n\r\n    const getAllIncome = useSelector(\r\n        state => state.finance.transactionsByPeriod.incomes.incomeTotal\r\n    );\r\n\r\n    // const [isActiveSalary, setIsActiveSalary] = useState(false);\r\n    // const [isActiveAdditionalIncome, setIsActiveAdditionalIncome] =\r\n    //     useState(false);\r\n\r\n    const resetActive = () => {\r\n        isActiveSalary = false;\r\n        isActiveAdditionalIncome = false;\r\n    };\r\n\r\n    const onClick = category => {\r\n        chooseProductChart(category);\r\n        resetActive();\r\n        switch (category) {\r\n            case SALARY_CATEGORY:\r\n                isActiveSalary = true;\r\n                break;\r\n            case ADDITIONAL_INCOME_CATEGORY:\r\n                isActiveAdditionalIncome = true;\r\n                break;\r\n            default:\r\n        }\r\n\r\n        console.log('isActiveAdditionalIncome: ', isActiveAdditionalIncome);\r\n        console.log('isActiveSalary: ', isActiveSalary);\r\n    };\r\n\r\n    // const onClick = category => {\r\n    //     chooseProductChart(category);\r\n    //     switch (category) {\r\n    //         case SALARY_CATEGORY:\r\n    //             setIsActiveSalary(true);\r\n    //             setIsActiveAdditionalIncome(false);\r\n    //             break;\r\n    //         case ADDITIONAL_INCOME_CATEGORY:\r\n    //             setIsActiveAdditionalIncome(true);\r\n    //             setIsActiveSalary(false);\r\n    //             break;\r\n    //         default:\r\n    //     }\r\n    // };\r\n\r\n    // console.log('Income!!!');\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.headGroup__container}>\r\n                <button onClick={handleChangeRender} className={s.flipbutton}>\r\n                    <svg className={s.flipbutton__icon} width=\"5\" height=\"10\">\r\n                        <use href={`${svg}#icon-arrowSmallLeft`}></use>\r\n                    </svg>\r\n                </button>\r\n                <h2 className={s.period__title}>INCOME</h2>\r\n                <button onClick={handleChangeRender} className={s.flipbutton}>\r\n                    <svg className={s.flipbutton__icon} width=\"5\" height=\"10\">\r\n                        <use href={`${svg}#icon-arrowSmallRight`}></use>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            {getAllIncome === 0 && <h1 className={s.Notify__title}>No incomes in this month</h1>}\r\n            <ul className={s.groupContent_container}>\r\n                {getSalary && (\r\n                    <li onClick={() => onClick(SALARY_CATEGORY)} className={s.content__container}>\r\n                        <span>{getSalary}</span>\r\n                        <svg\r\n                            className={isActiveSalary ? s.active : s.categories__icon}\r\n                            width=\"60\"\r\n                            height=\"60\"\r\n                        >\r\n                            <use href={`${svg}#category-Salary1`}></use>\r\n                        </svg>\r\n                        <span className={s.categories__text}>ЗП</span>\r\n                    </li>\r\n                )}\r\n                {getAdditionalIncome && (\r\n                    <li\r\n                        onClick={() => onClick(ADDITIONAL_INCOME_CATEGORY)}\r\n                        className={s.content__container}\r\n                    >\r\n                        <span>{getAdditionalIncome}</span>\r\n                        <svg\r\n                            className={isActiveAdditionalIncome ? s.active : s.categories__icon}\r\n                            width=\"60\"\r\n                            height=\"60\"\r\n                        >\r\n                            <use href={`${svg}#category-Salary2`}></use>\r\n                        </svg>\r\n                        <span className={s.categories__text}>Доп.доход</span>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReportsIncome;\r\n","import { ButtonBack, ReportsPeriod, ReportsTotal, ReportsCategories } from 'components';\r\nimport MobileChart from 'components/Charts/MobileChart';\r\nimport TabletChart from 'components/Charts/TabletChart';\r\nimport DesktopChart from 'components/Charts/DesktopChart';\r\nimport useWindowDimensions from 'hooks/useWindowDimensions';\r\nimport s from './Reports.module.css';\r\nimport { authSelectors } from 'redux/auth';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport operation from '../../redux/transaction/transactionOperations';\r\nimport { useState } from 'react';\r\nimport ReportsIncome from 'components/ReportsIncome/ReportsIncome';\r\nimport { BalanceForm } from 'components';\r\nconst Reports = () => {\r\n    const isRefreshingUser = useSelector(state => state.auth.isRefreshingUser);\r\n    const [date, setDate] = useState(9);\r\n    const [isIncome, setisIncome] = useState(true);\r\n    const [isExpense, setIsExpense] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState([]);\r\n    const [selectedIncomes, setSelectedIncomes] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const IncomesOfSelectedCategory = useSelector(\r\n        state => state.finance.transactionsByPeriod?.incomes?.incomesData?.[selectedIncomes] ?? {}\r\n    );\r\n    const productsOfSelectedCategory = useSelector(\r\n        state =>\r\n            state.finance.transactionsByPeriod?.expenses?.expensesData?.[selectedCategory] ?? {}\r\n    );\r\n\r\n    const TotalExpense = useSelector(\r\n        state => state.finance.transactionsByPeriod.expenses.expenseTotal\r\n    );\r\n\r\n    // Проверка и присоеденение 0 если дата меньше 10\r\n    let period = date;\r\n    if (date < 10) {\r\n        period = `0${date}`;\r\n    } else {\r\n        period = date;\r\n    }\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n    useEffect(() => {\r\n        if (!isRefreshingUser) {\r\n            if (!isLoggedIn) {\r\n                <Navigate to=\"/\" />;\r\n            } else dispatch(operation.getTransactionsByPeriod(period));\r\n        }\r\n    }, [dispatch, TotalExpense, period, isRefreshingUser, isLoggedIn]);\r\n\r\n    const { width } = useWindowDimensions();\r\n    // Селектор общей суммы затрат за месяц передается пропсом в  ReportsTotal\r\n\r\n    // Селектор общего дохода за месяц\r\n    const TotalIncome = useSelector(\r\n        state => state.finance.transactionsByPeriod.incomes.incomeTotal\r\n    );\r\n\r\n    const handleIncrementDate = () => {\r\n        if (date >= 12) {\r\n            return setDate(1);\r\n        }\r\n        setDate(date + 1);\r\n    };\r\n\r\n    const handleDecrementDate = () => {\r\n        if (date <= 1) {\r\n            return setDate(12);\r\n        }\r\n        setDate(date - 1);\r\n    };\r\n\r\n    const handleChangeRender = () => {\r\n        if (isIncome) {\r\n            setisIncome(false);\r\n        } else {\r\n            setisIncome(true);\r\n        }\r\n        if (isExpense) {\r\n            setIsExpense(false);\r\n        } else {\r\n            setIsExpense(true);\r\n        }\r\n    };\r\n\r\n    const chooseProductChart = categoryType => {\r\n        setSelectedCategory(categoryType);\r\n    };\r\n\r\n    const chooseIncomeChart = categoryType => {\r\n        setSelectedIncomes(categoryType);\r\n    };\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.reports__nav}>\r\n                <ButtonBack />\r\n                <BalanceForm />\r\n                <ReportsPeriod\r\n                    date={date}\r\n                    handleIncrementDate={handleIncrementDate}\r\n                    handleDecrementDate={handleDecrementDate}\r\n                />\r\n            </div>\r\n            <ReportsTotal TotalExpense={TotalExpense} TotalIncome={TotalIncome} />\r\n            {isExpense && (\r\n                <ReportsCategories\r\n                    handleChangeRender={handleChangeRender}\r\n                    chooseProductChart={chooseProductChart}\r\n                />\r\n            )}\r\n            {isIncome && (\r\n                <ReportsIncome\r\n                    handleChangeRender={handleChangeRender}\r\n                    chooseProductChart={chooseIncomeChart}\r\n                />\r\n            )}\r\n            <div>\r\n                {isExpense && Boolean(width < 768) && (\r\n                    <MobileChart objectForChart={productsOfSelectedCategory} />\r\n                )}\r\n                {isExpense && Boolean(width >= 768 && width <= 1279) && (\r\n                    <TabletChart objectForChart={productsOfSelectedCategory} />\r\n                )}\r\n                {isExpense && Boolean(width >= 1280) && (\r\n                    <DesktopChart objectForChart={productsOfSelectedCategory} />\r\n                )}\r\n\r\n                {isIncome && Boolean(width < 768) && (\r\n                    <MobileChart objectForChart={IncomesOfSelectedCategory} />\r\n                )}\r\n                {isIncome && Boolean(width >= 768 && width <= 1279) && (\r\n                    <TabletChart objectForChart={IncomesOfSelectedCategory} />\r\n                )}\r\n                {isIncome && Boolean(width >= 1280) && (\r\n                    <DesktopChart objectForChart={IncomesOfSelectedCategory} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reports;\r\n"],"names":["objectForChart","result","Object","entries","totalElementOfArray","shift","console","log","sort","a","b","textStyle","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing","color","marginBottom","style","marginRight","marginLeft","marginTop","length","map","el","paddingBottom","display","flexDirection","justifyContent","width","height","background","borderTopRightRadius","borderBottomRightRadius","nanoid","textAlign","chartDecorStyle","borderTop","ChartItemStyle","alignItems","zIndex","position","borderRadius","paddingTop","boxShadow","top","right","borderTopLeftRadius","useEffect","index","className","s","backgroundColor","isActiveSalary","isActiveAdditionalIncome","handleChangeRender","chooseProductChart","getSalary","useSelector","state","finance","transactionsByPeriod","incomes","incomesData","SALARY_CATEGORY","total","getAdditionalIncome","ADDITIONAL_INCOME_CATEGORY","getAllIncome","incomeTotal","onClick","category","href","svg","isRefreshingUser","auth","useState","date","setDate","isIncome","setisIncome","isExpense","setIsExpense","selectedCategory","setSelectedCategory","selectedIncomes","setSelectedIncomes","dispatch","useDispatch","IncomesOfSelectedCategory","productsOfSelectedCategory","expenses","expensesData","TotalExpense","expenseTotal","period","isLoggedIn","authSelectors","operation","useWindowDimensions","TotalIncome","handleIncrementDate","handleDecrementDate","categoryType","Boolean","to"],"sourceRoot":""}